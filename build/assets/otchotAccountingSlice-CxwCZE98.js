import{c as r,e as d,A as n,h as s,k as t}from"./index-CkEM-py_.js";const o=r("accountingSlice/accountingThunk",async({branchID:a})=>{const{request:e}=d();return await e(`${n}Encashment/encashment/${a}/`,"GET",null,s())}),_=[{value:"studentsPayments",name:"O'quvchilar tolovlari",disabled:!1},{value:"teachersSalary",name:"O'qituvchilar oyligi",disabled:!1},{value:"employeesSalary",name:"Ishchilar oyligi",disabled:!1},{value:"overhead",name:"Qo'shimcha xarajatlar",disabled:!1},{value:"capital",name:"Kapital xarajatlari",disabled:!1}],q=[{value:"payment",name:"O'quvchilar tolovlari",disabled:!1},{value:"teacherSalary",name:"O'qituvchilar oyligi",disabled:!1},{value:"employerSalary",name:"Ishchilar oyligi",disabled:!1},{value:"all",name:"Hammasi",disabled:!1}],j={pages:_,accountingPages:q,activePage:"studentsPayments",loading:!1,error:!1,encashment:[]},P=t({name:"accountingSlice",initialState:j,reducers:{onChangeAccountingPage:(a,e)=>{a.pages=a.pages.map(l=>l.value===e.payload.value?(a.activePage=e.payload.value,{...l,disabled:!0}):{...l,disabled:!1})},onChangePage:(a,e)=>{a.accountingPages=a.accountingPages.map(l=>l.value===e.payload.value?{...l,disabled:!0}:{...l,disabled:!1})}},extraReducers:a=>a.addCase(o.pending,e=>{e.loading=!0,e.error=!1}).addCase(o.fulfilled,(e,l)=>{e.encashment=l.payload,e.loading=!1,e.error=!1}).addCase(o.rejected,e=>{e.error="error",e.loading=!1})}),{onChangeAccountingPage:M,onChangePage:J}=P.actions,K=P.reducer,i=r("studentSlice/getStudentPayment",async a=>{const{request:e}=d();return await e(`${n}Students/student_payment_list/?branch=${a}&limit=10&offset=0`,"GET",null,s())}),c=r("studentSlice/getDeletedPayment",async a=>{const{request:e}=d();return await e(`${n}Students/student_payment_deleted_list/?branch=${a.id}`,"GET",null,s())}),O={studentsData:[],loading:!1,error:!1,deletedStudentsPayment:[]},G=t({name:"studentSlice",initialState:O,reducers:{onDeleteStudents:(a,e)=>{a.studentsData=a.studentsData.filter(l=>l.id!==e.payload.id)}},extraReducers:a=>a.addCase(i.pending,e=>{e.loading=!0,e.error=!1}).addCase(i.fulfilled,(e,l)=>{e.studentsData=l.payload.results,e.loading=!1,e.error=!1}).addCase(i.rejected,e=>{e.error=!0,e.loading=!1}).addCase(c.pending,e=>{e.loading=!0,e.error=!1}).addCase(c.fulfilled,(e,l)=>{e.deletedStudentsPayment=l.payload,e.loading=!1,e.error=!1}).addCase(c.rejected,e=>{e.loading=!1,e.error=!0})}),{onDeleteStudents:N}=G.actions,u=r("employerSlice/getEmpSalary",async a=>{const{request:e}=d();return await e(`${n}Users/salaries/?branch=${a}`,"GET",null,s())}),y=r("employerSlice/getDeletedEmpSalary",async a=>{const{request:e}=d();return await e(`${n}Users/salaries-deleted/?branch=${a.id}`,"GET",null,s())}),w={loading:!1,error:null,employerSalary:[],deletedEmployerSalary:[]},b=t({name:"employerSlice",initialState:w,reducers:{onDeleteEmployerSalary:(a,e)=>{a.employerSalary=a.employerSalary.filter(l=>l.id!==e.payload.id)},changePaymentType:(a,e)=>{console.log(e.payload,"action"),a.employerSalary=a.employerSalary.map(l=>l.id===+e.payload.id?(console.log(l.id,e.payload.id," item"),{id:e.payload.id,payment_types:e.payload.payment_types,user:e.payload.changingData.item.user,user_salary:e.payload.changingData.item.user_salary}):l)}},extraReducers:a=>a.addCase(u.pending,e=>{e.loading=!0,e.error=!1}).addCase(u.fulfilled,(e,l)=>{e.employerSalary=l.payload,e.loading=!1,e.error=!1}).addCase(u.rejected,(e,l)=>{e.loading=!1,e.error=!0}).addCase(y.pending,e=>{e.loading=!0,e.error=!1}).addCase(y.fulfilled,(e,l)=>{e.deletedEmployerSalary=l.payload,e.loading=!1,e.error=!1}).addCase(y.rejected,e=>{e.error=!0,e.loading=!1})}),{onDeleteEmployerSalary:Q,changePaymentType:z}=b.actions,B=b.reducer,g=r("teacherSalary/getTeacherSalary",async a=>{const{request:e}=d();return await e(`${n}Teachers/teacher-salary-list/?status=False&branch=${a}`,"GET",null,s())}),p=r("teacherSalary/getDeletedTeacherSalary",async a=>{const{request:e}=d();return await e(`${n}Teachers/teacher-salary-list/?status=True&branch=${a.id}`,"GET",null,s())});r("teacherSalary/changePaymentType",async()=>{});const A={teacherSalary:[],loading:!1,error:!1,deletedSalary:[]},H=t({name:"teacherSalary",initialState:A,reducers:{onDeleteTeacherSalary:(a,e)=>{a.teacherSalary=a.teacherSalary.filter(l=>l.id!==e.payload.id)},onChangePayment:(a,e)=>{a.teacherSalary.payment_types=a.teacherSalary.payment_types.map(l=>l.id===e.payload.id?{...l,payment_types:e.payload.payment_types}:l)}},extraReducers:a=>a.addCase(g.pending,e=>{e.loading=!0,e.error=!1}).addCase(g.fulfilled,(e,l)=>{e.teacherSalary=l.payload,e.loading=!1,e.error=!1}).addCase(g.rejected,e=>{e.error=!0,e.loading=!1}).addCase(p.pending,e=>{e.loading=!0,e.error=!1}).addCase(p.fulfilled,(e,l)=>{e.deletedSalary=l.payload,e.loading=!1,e.error=!1}).addCase(p.rejected,e=>{e.error=!0,e.loading=!1})}),{onDeleteTeacherSalary:V,onChangePayment:W}=H.actions,X=H.reducer,f=r("overHeadSlice/getOverheadType",async()=>{const{request:a}=d();return await a(`${n}Overhead/overheads_type/`,"GET",null,s())}),h=r("overHeadSlice/getMonthDay",async()=>{const{request:a}=d();return await a(`${n}Overhead/month-days/`,"GET",null,s())}),S=r("overHeadSlice/overHeadList",async({branchId:a,activeBtn:e})=>{const{request:l}=d();return await l(`${n}Overhead/overheads/?status=False&branch=${a}&type=${e}`,"GET",null,s())}),m=r("overHeadSlice/overHeadDeletedList",async a=>{const{request:e}=d();return await e(`${n}Overhead/overheads/?status=True&branch=${a.id}`,"GET",null,s())}),R={overHeadList:[],overHeadDeletedLists:[],overHeadType:[],loading:!1,error:!1,monthDay:[]},x=t({name:"overHeadSlice",initialState:R,reducers:{onDeleteOverhead:(a,e)=>{a.overHeadList=a.overHeadList.filter(l=>l.id!==e.payload.id)},onAddOverhead:(a,e)=>{a.overHeadList=[...a.overHeadList,e.payload]},onChangePaymentType:(a,e)=>{a.overHeadList=a.overHeadList.map(l=>(l.id===+e.payload.id&&console.log(l.id,e.payload.id," item"),l))}},extraReducers:a=>a.addCase(S.pending,e=>{e.loading=!0,e.error=!1}).addCase(S.fulfilled,(e,l)=>{e.overHeadList=l.payload,e.loading=!1,e.error=!1}).addCase(S.rejected,e=>{e.loading=!1,e.error=!0}).addCase(m.pending,e=>{e.loading=!0,e.error=!1}).addCase(m.fulfilled,(e,l)=>{e.overHeadDeletedLists=l.payload,e.loading=!1,e.error=!1}).addCase(m.rejected,e=>{e.loading=!1,e.error=!0}).addCase(f.pending,e=>{e.loading=!0,e.error=!1}).addCase(f.fulfilled,(e,l)=>{e.overHeadType=l.payload,e.loading=!1,e.error=!1}).addCase(f.rejected,e=>{e.loading=!1,e.error=!0}).addCase(h.pending,e=>{e.loading=!0,e.error=!1}).addCase(h.fulfilled,(e,l)=>{e.monthDay=l.payload,e.loading=!1,e.error=!1}).addCase(h.rejected,e=>{e.loading=!1,e.error=!0})}),{onDeleteOverhead:Y,onChangePaymentType:Z,onAddOverhead:ee}=x.actions,C=r("capitalList/capitalListThunk",async a=>{const{request:e}=d();return await e(`${n}Capital/old_capital_list/?status=False&branch=${a.id}`,"GET",null,s())}),v=r("capitalList/capitalDeletedListThunk",async a=>{const{request:e}=d();return await e(`${n}Capital/old_capital_list/?status=True&branch=${a.id}`,"GET",null,s())}),k={capital:[],capitalDeleted:[],loading:!1,error:!1},F=t({name:"capitalList",initialState:k,reducers:{onDeleteCapital:(a,e)=>{a.capital=a.capital.filter(l=>l.id!==e.payload.id)},onAddCapital:(a,e)=>{a.capital=[...a.capital,e.payload]}},extraReducers:a=>a.addCase(C.pending,e=>{e.loading=!0,e.error=!1}).addCase(C.fulfilled,(e,l)=>{e.capital=l.payload,e.loading=!1,e.error=!1}).addCase(C.rejected,e=>{e.loading=!1,e.error=!0}).addCase(v.pending,e=>{e.loading=!0,e.error=!1}).addCase(v.fulfilled,(e,l)=>{e.capitalDeleted=l.payload,e.loading=!1,e.error=!1}).addCase(v.rejected,e=>{e.loading=!1,e.error=!0})}),{onDeleteCapital:ae,onAddCapital:le}=F.actions,T=r("otchotSlice/getStudentPayment",a=>{const{request:e}=d();return e(`${n}Encashment/student_payments/?branch=${a}`,"GET",null,s())}),$=r("otchotSlice/getTeacherSalary",a=>{const{request:e}=d();return e(`${n}Encashment/teacher_salary/?branch=${a}`,"GET",null,s())}),D=r("otchotSlice/getEmployer",a=>{const{request:e}=d();return e(`${n}Encashment/employer_salary/?branch=${a}`)}),E=r("otchotSlice/getAll",({branchId:a})=>{const{request:e}=d();return e(`${n}Encashment/encashment_school/`,"POST",JSON.stringify({branch:a}),s())}),I={loading:!1,error:!1,years:[],months:[],students:[],teacherSalary:[],employerSalary:[],all:[]},L=t({name:"otchotSlice",initialState:I,reducers:{getFilteredAll:(a,e)=>{a.all=e.payload}},extraReducers:a=>a.addCase(T.pending,e=>{e.loading=!0,e.error=!1}).addCase(T.fulfilled,(e,l)=>{e.students=l.payload,e.loading=!1,e.error=!1}).addCase(T.rejected,e=>{e.loading=!1,e.error=!0}).addCase($.pending,e=>{e.loading=!0,e.error=!1}).addCase($.fulfilled,(e,l)=>{e.teacherSalary=l.payload,e.loading=!1,e.error=!1}).addCase($.rejected,e=>{e.loading=!1,e.error=!0}).addCase(D.pending,e=>{e.loading=!0,e.error=!1}).addCase(D.fulfilled,(e,l)=>{e.employerSalary=l.payload,e.loading=!1,e.error=!1}).addCase(D.rejected,e=>{e.loading=!1,e.error=!0}).addCase(E.pending,e=>{e.loading=!0,e.error=!1}).addCase(E.fulfilled,(e,l)=>{e.all=l.payload,e.loading=!1,e.error=!1}).addCase(E.rejected,e=>{e.loading=!1,e.error=!0})}),{getFilteredAll:re}=L.actions,de=L.reducer;export{o as a,K as b,z as c,Q as d,B as e,g as f,u as g,V as h,W as i,D as j,T as k,$ as l,re as m,E as n,M as o,J as p,de as q,X as t};
